// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from message.proto</summary>
public static partial class MessageReflection {

  #region Descriptor
  /// <summary>File descriptor for message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1tZXNzYWdlLnByb3RvIkUKCElkZW50aXR5EgoKAmlkGAEgASgJEg0KBXRv",
          "a2VuGAIgASgJEhAKCHJlc2VydmVkGAMgASgJEgwKBHNpZ24YBCABKAkiEgoE",
          "UGluZxIKCgJpZBgBIAEoCSJrCgxJbmNvbWluZ0RhdGESCgoCaWQYASABKAkS",
          "EwoLY29udGVudFR5cGUYAiABKAkSFQoNY29udGVudEVuY29kZRgDIAEoBRIP",
          "Cgdjb250ZW50GAQgASgMEhIKCmNvbnRlbnRTdHIYBSABKAkikwEKD0luY29t",
          "aW5nTWVzc2FnZRIKCgJpZBgBIAEoCRITCgtjb250ZW50VHlwZRgCIAEoCRIV",
          "Cg1jb250ZW50RW5jb2RlGAMgASgFEg8KB2NvbnRlbnQYBCABKAwSEgoKY29u",
          "dGVudFN0chgFIAEoCRIQCgh0b1VzZXJJZBgGIAEoCRIRCgl0b0dyb3VwSWQY",
          "ByABKAkihgEKEkluY29taW5nSW52b2NhdGlvbhIKCgJpZBgBIAEoCRIVCg1j",
          "b250ZW50RW5jb2RlGAIgASgFEg8KB3NlcnZpY2UYAyABKAkSDQoFY2xhc3MY",
          "BCABKAkSDgoGbWV0aG9kGAUgASgJEgwKBGFyZ3MYBiABKAwSDwoHYXJnc1N0",
          "chgHIAEoCSKWAQoGUmVzdWx0EgwKBGNvZGUYASABKAUSEwoLZGVzY3JpcHRp",
          "b24YAiABKAkSDQoFZm9ySWQYAyABKAkSDAoEdGltZRgEIAEoAxIQCghzZXJ2",
          "ZXJJZBgFIAEoCRIVCg1jb250ZW50RW5jb2RlGAYgASgFEg8KB2NvbnRlbnQY",
          "ByABKAwSEgoKY29udGVudFN0chgIIAEoCSJ5CgxPdXRnb2luZ0RhdGESCgoC",
          "aWQYASABKAkSDAoEdGltZRgCIAEoAxITCgtjb250ZW50VHlwZRgDIAEoCRIV",
          "Cg1jb250ZW50RW5jb2RlGAQgASgFEg8KB2NvbnRlbnQYBSABKAwSEgoKY29u",
          "dGVudFN0chgGIAEoCSKlAQoPT3V0Z29pbmdNZXNzYWdlEgoKAmlkGAEgASgJ",
          "EgwKBHRpbWUYAiABKAMSEwoLY29udGVudFR5cGUYAyABKAkSFQoNY29udGVu",
          "dEVuY29kZRgEIAEoBRIPCgdjb250ZW50GAUgASgMEhIKCmNvbnRlbnRTdHIY",
          "BiABKAkSEgoKZnJvbVVzZXJJZBgHIAEoCRITCgtmcm9tR3JvdXBJZBgIIAEo",
          "CUItCiBjb20ucHJvdG8uZGF0YS5nZW5lcmF0ZWQubWVzc2FnZUIJTWVzc2Fn",
          "ZVBCYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Identity), global::Identity.Parser, new[]{ "Id", "Token", "Reserved", "Sign" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Ping), global::Ping.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncomingData), global::IncomingData.Parser, new[]{ "Id", "ContentType", "ContentEncode", "Content", "ContentStr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncomingMessage), global::IncomingMessage.Parser, new[]{ "Id", "ContentType", "ContentEncode", "Content", "ContentStr", "ToUserId", "ToGroupId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncomingInvocation), global::IncomingInvocation.Parser, new[]{ "Id", "ContentEncode", "Service", "Class", "Method", "Args", "ArgsStr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Result), global::Result.Parser, new[]{ "Code", "Description", "ForId", "Time", "ServerId", "ContentEncode", "Content", "ContentStr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OutgoingData), global::OutgoingData.Parser, new[]{ "Id", "Time", "ContentType", "ContentEncode", "Content", "ContentStr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OutgoingMessage), global::OutgoingMessage.Parser, new[]{ "Id", "Time", "ContentType", "ContentEncode", "Content", "ContentStr", "FromUserId", "FromGroupId" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///从客户端到服务器端的数据
/// </summary>
public sealed partial class Identity : pb::IMessage<Identity>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Identity> _parser = new pb::MessageParser<Identity>(() => new Identity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Identity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Identity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Identity(Identity other) : this() {
    id_ = other.id_;
    token_ = other.token_;
    reserved_ = other.reserved_;
    sign_ = other.sign_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Identity Clone() {
    return new Identity(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 2;
  private string token_ = "";
  /// <summary>
  ///JWT Token， 包含userId, service等信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reserved" field.</summary>
  public const int ReservedFieldNumber = 3;
  private string reserved_ = "";
  /// <summary>
  ///业务层保留字段
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Reserved {
    get { return reserved_; }
    set {
      reserved_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sign" field.</summary>
  public const int SignFieldNumber = 4;
  private string sign_ = "";
  /// <summary>
  /// 以上数据的签名， 防修改
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sign {
    get { return sign_; }
    set {
      sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Identity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Identity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Token != other.Token) return false;
    if (Reserved != other.Reserved) return false;
    if (Sign != other.Sign) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (Reserved.Length != 0) hash ^= Reserved.GetHashCode();
    if (Sign.Length != 0) hash ^= Sign.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Token);
    }
    if (Reserved.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Reserved);
    }
    if (Sign.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Sign);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Token);
    }
    if (Reserved.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Reserved);
    }
    if (Sign.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Sign);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (Reserved.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Reserved);
    }
    if (Sign.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Identity other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    if (other.Reserved.Length != 0) {
      Reserved = other.Reserved;
    }
    if (other.Sign.Length != 0) {
      Sign = other.Sign;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Token = input.ReadString();
          break;
        }
        case 26: {
          Reserved = input.ReadString();
          break;
        }
        case 34: {
          Sign = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Token = input.ReadString();
          break;
        }
        case 26: {
          Reserved = input.ReadString();
          break;
        }
        case 34: {
          Sign = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Ping : pb::IMessage<Ping>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Ping> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping(Ping other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping Clone() {
    return new Ping(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  /// <summary>
  ///此处可以不用
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Ping);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Ping other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Ping other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IncomingData : pb::IMessage<IncomingData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IncomingData> _parser = new pb::MessageParser<IncomingData>(() => new IncomingData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncomingData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingData(IncomingData other) : this() {
    id_ = other.id_;
    contentType_ = other.contentType_;
    contentEncode_ = other.contentEncode_;
    content_ = other.content_;
    contentStr_ = other.contentStr_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingData Clone() {
    return new IncomingData(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentType" field.</summary>
  public const int ContentTypeFieldNumber = 2;
  private string contentType_ = "";
  /// <summary>
  ///业务数据的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentType {
    get { return contentType_; }
    set {
      contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 3;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 4;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///业务数据的二进制
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentStr" field.</summary>
  public const int ContentStrFieldNumber = 5;
  private string contentStr_ = "";
  /// <summary>
  ///业务数据的字符串， 如果这个有值， content就不会有值， 这两个字段互斥的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentStr {
    get { return contentStr_; }
    set {
      contentStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncomingData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncomingData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ContentType != other.ContentType) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Content != other.Content) return false;
    if (ContentStr != other.ContentStr) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentStr.Length != 0) hash ^= ContentStr.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (ContentType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentStr);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncomingData other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.ContentType.Length != 0) {
      ContentType = other.ContentType;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentStr.Length != 0) {
      ContentStr = other.ContentStr;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          ContentType = input.ReadString();
          break;
        }
        case 24: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 34: {
          Content = input.ReadBytes();
          break;
        }
        case 42: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          ContentType = input.ReadString();
          break;
        }
        case 24: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 34: {
          Content = input.ReadBytes();
          break;
        }
        case 42: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IncomingMessage : pb::IMessage<IncomingMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IncomingMessage> _parser = new pb::MessageParser<IncomingMessage>(() => new IncomingMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncomingMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingMessage(IncomingMessage other) : this() {
    id_ = other.id_;
    contentType_ = other.contentType_;
    contentEncode_ = other.contentEncode_;
    content_ = other.content_;
    contentStr_ = other.contentStr_;
    toUserId_ = other.toUserId_;
    toGroupId_ = other.toGroupId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingMessage Clone() {
    return new IncomingMessage(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentType" field.</summary>
  public const int ContentTypeFieldNumber = 2;
  private string contentType_ = "";
  /// <summary>
  ///业务数据的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentType {
    get { return contentType_; }
    set {
      contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 3;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 4;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///业务数据的二进制
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentStr" field.</summary>
  public const int ContentStrFieldNumber = 5;
  private string contentStr_ = "";
  /// <summary>
  ///业务数据的字符串， 如果这个有值， content就不会有值， 这两个字段互斥的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentStr {
    get { return contentStr_; }
    set {
      contentStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "toUserId" field.</summary>
  public const int ToUserIdFieldNumber = 6;
  private string toUserId_ = "";
  /// <summary>
  ///发送给那个用户ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ToUserId {
    get { return toUserId_; }
    set {
      toUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "toGroupId" field.</summary>
  public const int ToGroupIdFieldNumber = 7;
  private string toGroupId_ = "";
  /// <summary>
  ///发送给那个聊天组ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ToGroupId {
    get { return toGroupId_; }
    set {
      toGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncomingMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncomingMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ContentType != other.ContentType) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Content != other.Content) return false;
    if (ContentStr != other.ContentStr) return false;
    if (ToUserId != other.ToUserId) return false;
    if (ToGroupId != other.ToGroupId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentStr.Length != 0) hash ^= ContentStr.GetHashCode();
    if (ToUserId.Length != 0) hash ^= ToUserId.GetHashCode();
    if (ToGroupId.Length != 0) hash ^= ToGroupId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ContentStr);
    }
    if (ToUserId.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ToUserId);
    }
    if (ToGroupId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ToGroupId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ContentStr);
    }
    if (ToUserId.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ToUserId);
    }
    if (ToGroupId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ToGroupId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (ContentType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentStr);
    }
    if (ToUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUserId);
    }
    if (ToGroupId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ToGroupId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncomingMessage other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.ContentType.Length != 0) {
      ContentType = other.ContentType;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentStr.Length != 0) {
      ContentStr = other.ContentStr;
    }
    if (other.ToUserId.Length != 0) {
      ToUserId = other.ToUserId;
    }
    if (other.ToGroupId.Length != 0) {
      ToGroupId = other.ToGroupId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          ContentType = input.ReadString();
          break;
        }
        case 24: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 34: {
          Content = input.ReadBytes();
          break;
        }
        case 42: {
          ContentStr = input.ReadString();
          break;
        }
        case 50: {
          ToUserId = input.ReadString();
          break;
        }
        case 58: {
          ToGroupId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          ContentType = input.ReadString();
          break;
        }
        case 24: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 34: {
          Content = input.ReadBytes();
          break;
        }
        case 42: {
          ContentStr = input.ReadString();
          break;
        }
        case 50: {
          ToUserId = input.ReadString();
          break;
        }
        case 58: {
          ToGroupId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IncomingInvocation : pb::IMessage<IncomingInvocation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IncomingInvocation> _parser = new pb::MessageParser<IncomingInvocation>(() => new IncomingInvocation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncomingInvocation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingInvocation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingInvocation(IncomingInvocation other) : this() {
    id_ = other.id_;
    contentEncode_ = other.contentEncode_;
    service_ = other.service_;
    class_ = other.class_;
    method_ = other.method_;
    args_ = other.args_;
    argsStr_ = other.argsStr_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncomingInvocation Clone() {
    return new IncomingInvocation(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 2;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "service" field.</summary>
  public const int ServiceFieldNumber = 3;
  private string service_ = "";
  /// <summary>
  ///调用的服务名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Service {
    get { return service_; }
    set {
      service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "class" field.</summary>
  public const int ClassFieldNumber = 4;
  private string class_ = "";
  /// <summary>
  ///调用的类名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Class {
    get { return class_; }
    set {
      class_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "method" field.</summary>
  public const int MethodFieldNumber = 5;
  private string method_ = "";
  /// <summary>
  ///调用的方法名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Method {
    get { return method_; }
    set {
      method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "args" field.</summary>
  public const int ArgsFieldNumber = 6;
  private pb::ByteString args_ = pb::ByteString.Empty;
  /// <summary>
  ///调用的参数列表， 二进制
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Args {
    get { return args_; }
    set {
      args_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "argsStr" field.</summary>
  public const int ArgsStrFieldNumber = 7;
  private string argsStr_ = "";
  /// <summary>
  ///调用的参数列表， json字符串
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ArgsStr {
    get { return argsStr_; }
    set {
      argsStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncomingInvocation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncomingInvocation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Service != other.Service) return false;
    if (Class != other.Class) return false;
    if (Method != other.Method) return false;
    if (Args != other.Args) return false;
    if (ArgsStr != other.ArgsStr) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Service.Length != 0) hash ^= Service.GetHashCode();
    if (Class.Length != 0) hash ^= Class.GetHashCode();
    if (Method.Length != 0) hash ^= Method.GetHashCode();
    if (Args.Length != 0) hash ^= Args.GetHashCode();
    if (ArgsStr.Length != 0) hash ^= ArgsStr.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ContentEncode);
    }
    if (Service.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Service);
    }
    if (Class.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Class);
    }
    if (Method.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Method);
    }
    if (Args.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(Args);
    }
    if (ArgsStr.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ArgsStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ContentEncode);
    }
    if (Service.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Service);
    }
    if (Class.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Class);
    }
    if (Method.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Method);
    }
    if (Args.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(Args);
    }
    if (ArgsStr.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ArgsStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Service.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
    }
    if (Class.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Class);
    }
    if (Method.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
    }
    if (Args.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Args);
    }
    if (ArgsStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ArgsStr);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncomingInvocation other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Service.Length != 0) {
      Service = other.Service;
    }
    if (other.Class.Length != 0) {
      Class = other.Class;
    }
    if (other.Method.Length != 0) {
      Method = other.Method;
    }
    if (other.Args.Length != 0) {
      Args = other.Args;
    }
    if (other.ArgsStr.Length != 0) {
      ArgsStr = other.ArgsStr;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 26: {
          Service = input.ReadString();
          break;
        }
        case 34: {
          Class = input.ReadString();
          break;
        }
        case 42: {
          Method = input.ReadString();
          break;
        }
        case 50: {
          Args = input.ReadBytes();
          break;
        }
        case 58: {
          ArgsStr = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 26: {
          Service = input.ReadString();
          break;
        }
        case 34: {
          Class = input.ReadString();
          break;
        }
        case 42: {
          Method = input.ReadString();
          break;
        }
        case 50: {
          Args = input.ReadBytes();
          break;
        }
        case 58: {
          ArgsStr = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Result : pb::IMessage<Result>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Result(Result other) : this() {
    code_ = other.code_;
    description_ = other.description_;
    forId_ = other.forId_;
    time_ = other.time_;
    serverId_ = other.serverId_;
    contentEncode_ = other.contentEncode_;
    content_ = other.content_;
    contentStr_ = other.contentStr_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Result Clone() {
    return new Result(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 2;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "forId" field.</summary>
  public const int ForIdFieldNumber = 3;
  private string forId_ = "";
  /// <summary>
  ///对应Message里的id， 为客户端id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ForId {
    get { return forId_; }
    set {
      forId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 4;
  private long time_;
  /// <summary>
  ///返回结果的服务器时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "serverId" field.</summary>
  public const int ServerIdFieldNumber = 5;
  private string serverId_ = "";
  /// <summary>
  ///处理这件事所对应的服务器ID， 可能没有。
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerId {
    get { return serverId_; }
    set {
      serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 6;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 7;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///业务数据的二进制
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentStr" field.</summary>
  public const int ContentStrFieldNumber = 8;
  private string contentStr_ = "";
  /// <summary>
  ///业务数据的字符串， 如果这个有值， content就不会有值， 这两个字段互斥的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentStr {
    get { return contentStr_; }
    set {
      contentStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (Description != other.Description) return false;
    if (ForId != other.ForId) return false;
    if (Time != other.Time) return false;
    if (ServerId != other.ServerId) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Content != other.Content) return false;
    if (ContentStr != other.ContentStr) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (ForId.Length != 0) hash ^= ForId.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentStr.Length != 0) hash ^= ContentStr.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (ForId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ForId);
    }
    if (Time != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Time);
    }
    if (ServerId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ServerId);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (ForId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ForId);
    }
    if (Time != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Time);
    }
    if (ServerId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ServerId);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (ForId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ForId);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (ServerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentStr);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Result other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.ForId.Length != 0) {
      ForId = other.ForId;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    if (other.ServerId.Length != 0) {
      ServerId = other.ServerId;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentStr.Length != 0) {
      ContentStr = other.ContentStr;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
        case 26: {
          ForId = input.ReadString();
          break;
        }
        case 32: {
          Time = input.ReadInt64();
          break;
        }
        case 42: {
          ServerId = input.ReadString();
          break;
        }
        case 48: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 58: {
          Content = input.ReadBytes();
          break;
        }
        case 66: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
        case 26: {
          ForId = input.ReadString();
          break;
        }
        case 32: {
          Time = input.ReadInt64();
          break;
        }
        case 42: {
          ServerId = input.ReadString();
          break;
        }
        case 48: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 58: {
          Content = input.ReadBytes();
          break;
        }
        case 66: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OutgoingData : pb::IMessage<OutgoingData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OutgoingData> _parser = new pb::MessageParser<OutgoingData>(() => new OutgoingData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OutgoingData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingData(OutgoingData other) : this() {
    id_ = other.id_;
    time_ = other.time_;
    contentType_ = other.contentType_;
    contentEncode_ = other.contentEncode_;
    content_ = other.content_;
    contentStr_ = other.contentStr_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingData Clone() {
    return new OutgoingData(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private long time_;
  /// <summary>
  ///该消息的发送时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "contentType" field.</summary>
  public const int ContentTypeFieldNumber = 3;
  private string contentType_ = "";
  /// <summary>
  ///业务数据的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentType {
    get { return contentType_; }
    set {
      contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 4;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 5;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///业务数据的二进制， 这个字段在Javascript端须要base64， 还不如用字符串了
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentStr" field.</summary>
  public const int ContentStrFieldNumber = 6;
  private string contentStr_ = "";
  /// <summary>
  ///业务数据的字符串， 如果这个有值， content就不会有值， 这两个字段互斥的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentStr {
    get { return contentStr_; }
    set {
      contentStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OutgoingData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OutgoingData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Time != other.Time) return false;
    if (ContentType != other.ContentType) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Content != other.Content) return false;
    if (ContentStr != other.ContentStr) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentStr.Length != 0) hash ^= ContentStr.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Time);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Time);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ContentStr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (ContentType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentStr);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OutgoingData other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    if (other.ContentType.Length != 0) {
      ContentType = other.ContentType;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentStr.Length != 0) {
      ContentStr = other.ContentStr;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadInt64();
          break;
        }
        case 26: {
          ContentType = input.ReadString();
          break;
        }
        case 32: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 42: {
          Content = input.ReadBytes();
          break;
        }
        case 50: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadInt64();
          break;
        }
        case 26: {
          ContentType = input.ReadString();
          break;
        }
        case 32: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 42: {
          Content = input.ReadBytes();
          break;
        }
        case 50: {
          ContentStr = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OutgoingMessage : pb::IMessage<OutgoingMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OutgoingMessage> _parser = new pb::MessageParser<OutgoingMessage>(() => new OutgoingMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OutgoingMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingMessage(OutgoingMessage other) : this() {
    id_ = other.id_;
    time_ = other.time_;
    contentType_ = other.contentType_;
    contentEncode_ = other.contentEncode_;
    content_ = other.content_;
    contentStr_ = other.contentStr_;
    fromUserId_ = other.fromUserId_;
    fromGroupId_ = other.fromGroupId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutgoingMessage Clone() {
    return new OutgoingMessage(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private long time_;
  /// <summary>
  ///该消息的发送时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "contentType" field.</summary>
  public const int ContentTypeFieldNumber = 3;
  private string contentType_ = "";
  /// <summary>
  ///业务数据的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentType {
    get { return contentType_; }
    set {
      contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentEncode" field.</summary>
  public const int ContentEncodeFieldNumber = 4;
  private int contentEncode_;
  /// <summary>
  ///业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentEncode {
    get { return contentEncode_; }
    set {
      contentEncode_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 5;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///业务数据的二进制， 这个字段在Javascript端须要base64， 还不如用字符串了
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "contentStr" field.</summary>
  public const int ContentStrFieldNumber = 6;
  private string contentStr_ = "";
  /// <summary>
  ///业务数据的字符串， 如果这个有值， content就不会有值， 这两个字段互斥的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContentStr {
    get { return contentStr_; }
    set {
      contentStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fromUserId" field.</summary>
  public const int FromUserIdFieldNumber = 7;
  private string fromUserId_ = "";
  /// <summary>
  ///这条消息来自于那个用户ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FromUserId {
    get { return fromUserId_; }
    set {
      fromUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fromGroupId" field.</summary>
  public const int FromGroupIdFieldNumber = 8;
  private string fromGroupId_ = "";
  /// <summary>
  ///这条消息来自于那个聊天组ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FromGroupId {
    get { return fromGroupId_; }
    set {
      fromGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OutgoingMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OutgoingMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Time != other.Time) return false;
    if (ContentType != other.ContentType) return false;
    if (ContentEncode != other.ContentEncode) return false;
    if (Content != other.Content) return false;
    if (ContentStr != other.ContentStr) return false;
    if (FromUserId != other.FromUserId) return false;
    if (FromGroupId != other.FromGroupId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
    if (ContentEncode != 0) hash ^= ContentEncode.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentStr.Length != 0) hash ^= ContentStr.GetHashCode();
    if (FromUserId.Length != 0) hash ^= FromUserId.GetHashCode();
    if (FromGroupId.Length != 0) hash ^= FromGroupId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Time);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ContentStr);
    }
    if (FromUserId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(FromUserId);
    }
    if (FromGroupId.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(FromGroupId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Time);
    }
    if (ContentType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ContentType);
    }
    if (ContentEncode != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContentEncode);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Content);
    }
    if (ContentStr.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ContentStr);
    }
    if (FromUserId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(FromUserId);
    }
    if (FromGroupId.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(FromGroupId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (ContentType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
    }
    if (ContentEncode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentEncode);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentStr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentStr);
    }
    if (FromUserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserId);
    }
    if (FromGroupId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FromGroupId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OutgoingMessage other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    if (other.ContentType.Length != 0) {
      ContentType = other.ContentType;
    }
    if (other.ContentEncode != 0) {
      ContentEncode = other.ContentEncode;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentStr.Length != 0) {
      ContentStr = other.ContentStr;
    }
    if (other.FromUserId.Length != 0) {
      FromUserId = other.FromUserId;
    }
    if (other.FromGroupId.Length != 0) {
      FromGroupId = other.FromGroupId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadInt64();
          break;
        }
        case 26: {
          ContentType = input.ReadString();
          break;
        }
        case 32: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 42: {
          Content = input.ReadBytes();
          break;
        }
        case 50: {
          ContentStr = input.ReadString();
          break;
        }
        case 58: {
          FromUserId = input.ReadString();
          break;
        }
        case 66: {
          FromGroupId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadInt64();
          break;
        }
        case 26: {
          ContentType = input.ReadString();
          break;
        }
        case 32: {
          ContentEncode = input.ReadInt32();
          break;
        }
        case 42: {
          Content = input.ReadBytes();
          break;
        }
        case 50: {
          ContentStr = input.ReadString();
          break;
        }
        case 58: {
          FromUserId = input.ReadString();
          break;
        }
        case 66: {
          FromGroupId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
